@use "../utils" as *;
@use "../config" as *;

$radius: Map-Deep-Search($settings, "border-radius");

%common {
    letter-spacing: 0.05rem;
    font-weight: bold;
    border-radius: $radius;
    transition: background-color .25s, color .25s;
}

// Common Variables
$_sizes: (
    large: (
        padding: 1rem 2rem,
        font-size: 2rem,
        font-weight: bold,
    ),
    medium: (
        padding: .75rem 1.5rem,
        font-size: 1.25rem,
        font-weight: bold,
    ),
    small: (
        padding: .5rem 1rem,
        font-size: 0.85rem,
        font-weight: normal,
    ),
);


/// A button for all your button needs
/// @param {string} $type [secondary] - The type of button as per the theme sheet
/// @param {string} $size [large] - The size of the button. Can be large, medium, or small
/// @param {bool} $outline [false] - Determines if the button styles are that of an outline
@mixin Button(
    $type: "secondary", 
    $size: "medium", 
    $outline: false,
) {
    $type-checked: Check-Types(($type, "string"), ($size, ("string", "percent")), ($outline, "bool"));

    @if Includes($_sizes, $size) {
        @each $key, $val in map-get($_sizes, $size) {
            #{$key}: $val;
        }
    } @else {
        
    }

    @extend %common;

    @if $outline {
        border: .19rem Theme("#{$type}-light") solid;
        color: Theme($type);
    } @else {
        color: Theme("text-light");
        background-color: Theme($type);
    }

    &:hover {
        background-color: Theme("#{$type}-light");
        color: Theme("text-light");
    }
}

